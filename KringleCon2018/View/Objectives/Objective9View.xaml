<UserControl x:Class="KringleCon2018.Objectives.Objective9View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d"
             d:DesignHeight="3600" d:DesignWidth="800">
    <UserControl.Resources>
        <SolidColorBrush x:Key="HeaderBackground" Color="{StaticResource Primary700}"/>
        <ControlTemplate x:Key="CustomExpanderTemplate" TargetType="Expander">
            <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" SnapsToDevicePixels="True">
                <DockPanel>
                    <ToggleButton Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" DockPanel.Dock="Top" FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}" FontStretch="{TemplateBinding Control.FontStretch}" FontStyle="{TemplateBinding Control.FontStyle}" FontWeight="{TemplateBinding Control.FontWeight}" Foreground="{TemplateBinding Control.Foreground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinHeight="0" MinWidth="0" Name="HeaderSite" Padding="{TemplateBinding Control.Padding}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                        <ToggleButton.FocusVisualStyle>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.FocusVisualStyle>
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Cursor="Hand" CornerRadius="3" Background="{StaticResource HeaderBackground}" BorderBrush="Green" BorderThickness="2" Padding="{TemplateBinding Control.Padding}">
                                                <Grid Background="{StaticResource HeaderBackground}" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Ellipse Height="19" HorizontalAlignment="Center" Name="circle" Stroke="{DynamicResource IdealForegroundColorBrush}" VerticalAlignment="Center" Width="19" />
                                                    <Path Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" Name="arrow" SnapsToDevicePixels="False" Stroke="{DynamicResource IdealForegroundColorBrush}" StrokeThickness="2" VerticalAlignment="Center" />
                                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.Column="1" HorizontalAlignment="Left" Margin="10" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                    <Setter Property="Path.Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5" />
                                                </Trigger>
                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF3C7FB1" />
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF222222" />
                                                </Trigger>
                                                <Trigger Property="ButtonBase.IsPressed" Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF526C7B" />
                                                    <Setter Property="Shape.StrokeThickness" TargetName="circle" Value="1.5" />
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF003366" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" Name="ExpandSite" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Collapsed" />
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Expander.IsExpanded" Value="True">
                    <Setter Property="UIElement.Visibility" TargetName="ExpandSite" Value="Visible" />
                </Trigger>
                <Trigger Property="Expander.ExpandDirection" Value="Right">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                    <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Padding="{TemplateBinding Control.Padding}">
                                                <Grid Background="{StaticResource HeaderBackground}" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="-90" />
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse Height="19" HorizontalAlignment="Center" Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19" />
                                                        <Path Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" Name="arrow" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center" />
                                                    </Grid>
                                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.Row="1" HorizontalAlignment="Center" Margin="0,4,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top" />
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                    <Setter Property="Path.Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5" />
                                                </Trigger>
                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF3C7FB1" />
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF222222" />
                                                </Trigger>
                                                <Trigger Property="ButtonBase.IsPressed" Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF526C7B" />
                                                    <Setter Property="Shape.StrokeThickness" TargetName="circle" Value="1.5" />
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF003366" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Expander.ExpandDirection" Value="Up">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                    <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Padding="{TemplateBinding Control.Padding}">
                                                <Grid Background="{StaticResource HeaderBackground}" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="180" />
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse Height="19" HorizontalAlignment="Center" Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19" />
                                                        <Path Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" Name="arrow" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center" />
                                                    </Grid>
                                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                    <Setter Property="Path.Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5" />
                                                </Trigger>
                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF3C7FB1" />
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF222222" />
                                                </Trigger>
                                                <Trigger Property="ButtonBase.IsPressed" Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF526C7B" />
                                                    <Setter Property="Shape.StrokeThickness" TargetName="circle" Value="1.5" />
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF003366" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Expander.ExpandDirection" Value="Left">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                    <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Padding="{TemplateBinding Control.Padding}">
                                                <Grid Background="{StaticResource HeaderBackground}" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="90" />
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse Height="19" HorizontalAlignment="Center" Name="circle" Stroke="DarkGray" VerticalAlignment="Center" Width="19" />
                                                        <Path Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" Name="arrow" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center" />
                                                    </Grid>
                                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.Row="1" HorizontalAlignment="Center" Margin="0,4,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top" />
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                    <Setter Property="Path.Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5" />
                                                </Trigger>
                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF3C7FB1" />
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF222222" />
                                                </Trigger>
                                                <Trigger Property="ButtonBase.IsPressed" Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="circle" Value="#FF526C7B" />
                                                    <Setter Property="Shape.StrokeThickness" TargetName="circle" Value="1.5" />
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="#FF003366" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <ScrollViewer Name="Scroller" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalAlignment="Stretch">
        <StackPanel>
            <TextBlock Margin="10" HorizontalAlignment="Center">
                <Run FontSize="30" FontWeight="Regular" FontFamily="Sans"  FontStyle="Italic" Text="Difficulty:" />
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
            </TextBlock>
            <TextBlock FontFamily="Sans"
                       FontSize="16"
                       Margin="10"
                       TextAlignment="Justify"
                       HorizontalAlignment="Left"
                       TextWrapping="Wrap">
                <Run Text="Alabaster Snowball is in dire need of your help. Santa's file server has been hit with malware. Help Alabaster Snowball deal with the malware on Santa's server by completing several tasks." />
                <Run FontStyle="Italic" Text="For hints on achieving this objective, please visit Shinny Upatree and help him with the" />
                <Run FontWeight="Bold" FontStyle="Italic" Text="Sleigh Bell Lottery" />
                <Run FontStyle="Italic" Text="Cranberry Pi terminal challenge." />
            </TextBlock>
            <Border Margin="10"
                    BorderBrush="{DynamicResource AccentColorBrush}"
                    BorderThickness="2">
                <Grid ShowGridLines="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="2" Grid.Row="0" Grid.Column="0" FontFamily="Sans" FontWeight="Bold" FontSize="16" Text="Elf" />
                    <TextBlock Margin="2" Grid.Row="0" Grid.Column="1" FontFamily="Sans" FontWeight="Bold" FontSize="16" Text="CranberyPi Game" />
                    <TextBlock Margin="2" Grid.Row="1" Grid.Column="0" FontFamily="Sans" FontSize="16" TextWrapping="Wrap" Text="Shinny Upatree" />
                    <TextBlock Margin="2" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" FontFamily="Sans" FontSize="16">
                        <Hyperlink Command="{Binding Path=NavigateCommand}" CommandParameter="https://docker.kringlecon.com/?challenge=unlinked-function">
                            Sleigh Bell Lottery
                        </Hyperlink>
                    </TextBlock>                    
                </Grid>
            </Border>
            <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                <Run>The Shinny Upatree terminal opens directly into a shell where we have to win the "sleighbell lottery".</Run>
                <Run>In the home directory of the "elf" user, there is a "gdb" executable, "objdump" executable, and the lottery game executable "sleighbell-lotto".</Run>
                <LineBreak/><LineBreak/>
                1) <Run>Using the "nm" command we can see all of the function names inside of the code.</Run>
                <Run>Run the following command:</Run><LineBreak/>
                <Label Style="{StaticResource kbd}">nm ./sleighbell-lotto</Label><LineBreak/>
                <LineBreak/>
                <Run>The output of the script above will reveal the following in program:</Run>
                <LineBreak/>
                <ContentControl Style="{StaticResource panel-default}">
                    <StackPanel>
                        <ContentControl Style="{StaticResource panel-heading-default}" Content="nm ./sleighbell-lotto"/>
                        <ContentControl Style="{StaticResource panel-body}">
                            <ContentControl.Content>
                                <TextBox
                                    Height="200"
                                    Width="350"
                                    Background="Black"
                                    Foreground="White"
                                    TextWrapping="NoWrap"
                                    AcceptsReturn="True"
                                    HorizontalScrollBarVisibility="Auto"
                                    VerticalScrollBarVisibility="Auto"
                                    Text="{Binding NMSleighBellLotto}" />
                            </ContentControl.Content>
                        </ContentControl>
                    </StackPanel>
                </ContentControl>
            </TextBlock>
            <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                2) <Run>Out of the results, we can see the main function.  We can also see a function called "winnerwinner".  This may be the function that is called whenever someone wins.</Run>
                <Run>Now it's time to debug the program using "gdb".  To load the program in the debugger run the following command:</Run><LineBreak/>
                <Label Style="{StaticResource kbd}">gdb -q ./sleighbell-lotto</Label><LineBreak/>
                <Run>This will put you in the command line of the debugger with the "sleighbell-lotto" program opened.</Run>
                <Run>Next we have to set a breakpoint in the code.  Let's just put a breakpoint at the initial "main" function where the program starts.</Run>
                <Run>Run the following command to add a breakpoint to the beginning of the main function:</Run><LineBreak/>
                <Label Style="{StaticResource kbd}">(gdb) break main</Label><LineBreak/><LineBreak/>
                3) <Run>Now run the program code in the debugger in order get to the breakpoint you have set.</Run><LineBreak/>
                <Label Style="{StaticResource kbd}">(gdb) run</Label><LineBreak/><LineBreak/>
                4) <Run>We should now be able to use the jump command to jump to either LINENUM or *ADDR.  In this program, we found a function called "winnerwinner".  So let's jump there.</Run>
                <Run>In order to jump to the "winnerwinner" function in the code, execute the following command:</Run><LineBreak/>
                <Label Style="{StaticResource kbd}">(gdb) jump winnerwinner</Label><LineBreak/><LineBreak/>
                <Run>Once we run the command, we will win the lottery! Yeah!</Run>
            </TextBlock>
            <Image Source="{Binding ShinyUpatree}" HorizontalAlignment="Left" Margin="10" Stretch="Fill" />
            <Expander Margin="10" Background="{DynamicResource IdealForegroundColorBrush}" HorizontalAlignment="Stretch" BorderBrush="{StaticResource AccentBaseColorBrush}" BorderThickness="1"
          HorizontalContentAlignment="Stretch" Width="Auto" Template="{StaticResource CustomExpanderTemplate}">
                <Expander.Header>
                    <TextBlock
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="20"
                                   Foreground="{DynamicResource IdealForegroundColorBrush}"
                                   Text="Catch the Malware">
                        <TextBlock.Effect>
                            <DropShadowEffect
                                    ShadowDepth="4"
                                    Direction="0"
                                    Color="Black"
                                    Opacity="0.75"
                                    BlurRadius="5"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </Expander.Header>
                <StackPanel>
                    <TextBlock Margin="10" HorizontalAlignment="Center">
                        <Run FontSize="30" FontWeight="Regular" FontFamily="Sans"  FontStyle="Italic" Text="Difficulty:" />
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="{DynamicResource IdealForegroundDisabledBrush}" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="{DynamicResource IdealForegroundDisabledBrush}" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextAlignment="Justify"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                        <Run>Assist Alabaster by building a Snort filter to identify the malware plaguing Santa's Castle.</Run>
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextAlignment="Left"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                        1) <Run>Open the "Snort Challenge" laptop near "Alabaster Snowball".  You will be logged into the terminal.</Run>
                        <Hyperlink Command="{Binding NavigateCommand}" CommandParameter="https://docker.kringlecon.com/?challenge=snort">KingleCastle Snort IDS Sensor 1</Hyperlink>
                        <LineBreak/>
                        <LineBreak/>
                        <Run>In this terminal, you must create a snort rule that matches ONLY bad DNS traffic and NOT legitimate user traffic and the system will notify of your success.</Run>
                        <Run>Here is a text file that is given in the home directory with additional information:</Run>
                        <LineBreak/>
                        <ContentControl Style="{StaticResource panel-default}">
                            <StackPanel>
                                <ContentControl Style="{StaticResource panel-heading-default}" Content="more_info.txt"/>
                                <ContentControl Style="{StaticResource panel-body}">
                                    <ContentControl.Content>
                                        <TextBox
                                            Height="200"
                                            Width="350"
                                            Background="Black"
                                            Foreground="White"
                                            TextWrapping="NoWrap"
                                            AcceptsReturn="True"
                                            HorizontalScrollBarVisibility="Auto"
                                            VerticalScrollBarVisibility="Auto"
                                            Text="{Binding MoreInfo}" />
                                    </ContentControl.Content>
                                </ContentControl>
                            </StackPanel>
                        </ContentControl>
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextAlignment="Left"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                        <Run>From the file above you can find pcap files to analyze at:</Run> <Hyperlink Command="{Binding NavigateCommand}" CommandParameter="http://snortsensor1.kringlecastle.com/">http://snortsensor1.kringlecastle.com/</Hyperlink>
                        <LineBreak/><LineBreak/>
                        2) <Run>Log into the sensor with the credentials given in the text document.  Use this site to download 6 PCAP files to analyze and coming up with your snort rule.</Run>
                        <LineBreak/>
                    </TextBlock>
                    <Button Cursor="Hand" Command="{Binding DownloadFileCommand}" CommandParameter="{Binding PCAP1}">Download: snort.log.1547255048.4356453.pcap</Button>
                    <Button Cursor="Hand" Command="{Binding DownloadFileCommand}" CommandParameter="{Binding PCAP2}">Download: snort.log.1547255095.3225539.pcap</Button>
                    <Button Cursor="Hand" Command="{Binding DownloadFileCommand}" CommandParameter="{Binding PCAP3}">Download: snort.log.1547255127.5287354.pcap</Button>
                    <Button Cursor="Hand" Command="{Binding DownloadFileCommand}" CommandParameter="{Binding PCAP4}">Download: snort.log.1547255167.4590678.pcap</Button>
                    <Button Cursor="Hand" Command="{Binding DownloadFileCommand}" CommandParameter="{Binding PCAP5}">Download: snort.log.1547255214.5929677.pcap</Button>
                    <Button Cursor="Hand" Command="{Binding DownloadFileCommand}" CommandParameter="{Binding PCAP6}">Download: snort.log.1547255248.2398825.pcap</Button>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextAlignment="Left"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                        <Run>After analyzing the PCAP files with Wireshark, I copied all of the line items that were suspect into the following file:</Run>
                        <LineBreak/>
                        <ContentControl Style="{StaticResource panel-default}">
                            <StackPanel>
                                <ContentControl Style="{StaticResource panel-heading-default}" Content="pcap_signature_samples.txt"/>
                                <ContentControl Style="{StaticResource panel-body}">
                                    <ContentControl.Content>
                                        <TextBox
                                            Height="200"
                                            Width="350"
                                            Background="Black"
                                            Foreground="White"
                                            TextWrapping="NoWrap"
                                            AcceptsReturn="True"
                                            HorizontalScrollBarVisibility="Auto"
                                            VerticalScrollBarVisibility="Auto"
                                            Text="{Binding PCAP_Sigs}" />
                                    </ContentControl.Content>
                                </ContentControl>
                            </StackPanel>
                        </ContentControl>
                        <LineBreak/>
                        <Run>I then brought the sample set to an</Run> <Hyperlink Command="{Binding NavigateCommand}" CommandParameter="https://www.regexpal.com/">online regex tester</Hyperlink> <Run>to create and test a regex script that would match the sample signatures.</Run>
                        <Run>I noticed some patterns and naming conventions which can be seen in the regex generated below.</Run>
                        <LineBreak/>
                        <Label Style="{StaticResource kbd}">/([bushranger]{10}|[burger]{6}|[hans]{4}).(net|com|org|ru)/g</Label>
                        <LineBreak/>                        
                        <Run>I then used this regex and the information from wireshark to generate the snort rule.</Run><LineBreak/>
                        <TextBlock Style="{StaticResource kbd_tb}">alert udp any any -> any any (msg:"Detected ransomware from signatures"; pcre:"/([bushranger]{10}|[burger]{6}|[hans]{4}).(net|com|org|ru)/"; sid:10000001; rev: 001;)</TextBlock><LineBreak/><LineBreak/>
                        3) <Run>Put the snort rule into the location </Run>
                        <Label Style="{StaticResource kbd}">/etc/snort/rules/local.rules</Label><LineBreak/><LineBreak/>
                        4) <Run>Now run the command to test your snort rule on the pcap file in the home directory:</Run>
                        <LineBreak/>
                        <TextBlock Style="{StaticResource kbd_tb}">snort -A fast -r ~/snort.log.pcap -l ~/snort_logs -c /etc/snort/snort.conf</TextBlock><LineBreak/>
                        <Run>When running the command, you will get the following results:</Run><LineBreak/>
                        <ContentControl Style="{StaticResource panel-default}">
                            <StackPanel>
                                <ContentControl Style="{StaticResource panel-heading-default}" Content="SnortRunResults.txt"/>
                                <ContentControl Style="{StaticResource panel-body}">
                                    <ContentControl.Content>
                                        <TextBox
                                            Height="200"
                                            Width="350"
                                            Background="Black"
                                            Foreground="White"
                                            TextWrapping="NoWrap"
                                            AcceptsReturn="True"
                                            HorizontalScrollBarVisibility="Auto"
                                            VerticalScrollBarVisibility="Auto"
                                            Text="{Binding SnortRunResults}" />
                                    </ContentControl.Content>
                                </ContentControl>
                            </StackPanel>
                        </ContentControl>
                        <ContentControl Style="{StaticResource panel-default}">
                            <StackPanel>
                                <ContentControl Style="{StaticResource panel-heading-default}" Content="SnortAlerts.txt"/>
                                <ContentControl Style="{StaticResource panel-body}">
                                    <ContentControl.Content>
                                        <TextBox
                                            Height="200"
                                            Width="350"
                                            Background="Black"
                                            Foreground="White"
                                            TextWrapping="NoWrap"
                                            AcceptsReturn="True"
                                            HorizontalScrollBarVisibility="Auto"
                                            VerticalScrollBarVisibility="Auto"
                                            Text="{Binding SnortAlerts}" />
                                    </ContentControl.Content>
                                </ContentControl>
                            </StackPanel>
                        </ContentControl>
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextAlignment="Left"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                        <Run>You will get the following result after getting the correct snort rule:</Run>
                    </TextBlock>
                    <Image Source="{Binding SnortIDS}" HorizontalAlignment="Left" Margin="10" Stretch="Fill" />
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                        <Run FontWeight="Bold" Text="Answer/Snort Filter" />:<LineBreak/>
                        <TextBlock Style="{StaticResource kbd_tb}">alert udp any any -> any any (msg:"Detected ransomware from signatures"; pcre:"/([bushranger]{10}|[burger]{6}|[hans]{4}).(net|com|org|ru)/"; sid:10000001; rev: 001;)</TextBlock>
                    </TextBlock>
                </StackPanel>
            </Expander>
            <Expander Margin="10" HorizontalAlignment="Stretch" Background="{DynamicResource IdealForegroundColorBrush}" BorderBrush="{StaticResource AccentBaseColorBrush}" BorderThickness="1"
          HorizontalContentAlignment="Stretch" Width="Auto" Template="{StaticResource CustomExpanderTemplate}">
                <Expander.Header>
                    <TextBlock
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="20"
                                   Foreground="{DynamicResource IdealForegroundColorBrush}"
                                   Text="Identify the Domain">
                        <TextBlock.Effect>
                            <DropShadowEffect
                                    ShadowDepth="4"
                                    Direction="0"
                                    Color="Black"
                                    Opacity="0.75"
                                    BlurRadius="5"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </Expander.Header>
                <StackPanel>
                    <TextBlock Margin="10" HorizontalAlignment="Center">
                        <Run FontSize="30" FontWeight="Regular" FontFamily="Sans"  FontStyle="Italic" Text="Difficulty:" />
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextAlignment="Justify"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                        <Run>Using the Word docm file, identify the domain name that the malware communicates with.</Run>
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextAlignment="Left"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                        <Run>After solving "Catch the Malware", Alabaster Snowball, will give you a word document "docm file" that has malware embedded in it.</Run><LineBreak/>
                    </TextBlock>
                    <Button Cursor="Hand" Command="{Binding DownloadFileCommand}" CommandParameter="{Binding ChocoZip}">Download: CHOCOLATE_CHIP_COOKIE_RECIPE.zip</Button>
                    <Button Cursor="Hand" Command="{Binding DownloadFileCommand}" CommandParameter="{Binding ChocoDoc}">Download: CHOCOLATE_CHIP_COOKIE_RECIPE.docm</Button>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextAlignment="Left"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                    <Run>We have to isolate and analyze the malware to identify the domain name that the malware communicates with.</Run>
                        <LineBreak/><LineBreak/>
                        1) <Run></Run>
                    </TextBlock>
                    <TextBlock Text="One"/>
                    <TextBlock Text="Two"/>
                    <TextBlock Text="Three"/>
                </StackPanel>
            </Expander>
            <Expander Margin="10" HorizontalAlignment="Stretch" Background="{DynamicResource IdealForegroundColorBrush}" BorderBrush="{StaticResource AccentBaseColorBrush}" BorderThickness="1"
          HorizontalContentAlignment="Stretch" Width="Auto" Template="{StaticResource CustomExpanderTemplate}">
                <Expander.Header>
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="20"
                               Foreground="{DynamicResource IdealForegroundColorBrush}"
                               Text="Stop the Malware">
                        <TextBlock.Effect>
                            <DropShadowEffect
                                    ShadowDepth="4"
                                    Direction="0"
                                    Color="Black"
                                    Opacity="0.75"
                                    BlurRadius="5"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </Expander.Header>
                <StackPanel>
                    <TextBlock Margin="10" HorizontalAlignment="Center">
                        <Run FontSize="30" FontWeight="Regular" FontFamily="Sans"  FontStyle="Italic" Text="Difficulty:" />
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="{DynamicResource IdealForegroundDisabledBrush}" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="{DynamicResource IdealForegroundDisabledBrush}" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                    </TextBlock>
                    <TextBlock Text="Two"/>
                    <TextBlock Text="Three"/>
                    <TextBlock Text="One"/>
                    <TextBlock Text="Two"/>
                    <TextBlock Text="Three"/>
                </StackPanel>
            </Expander>
            <Expander Margin="10" HorizontalAlignment="Stretch" Background="{DynamicResource IdealForegroundColorBrush}" BorderBrush="{StaticResource AccentBaseColorBrush}" BorderThickness="1"
          HorizontalContentAlignment="Stretch" Width="Auto" Template="{StaticResource CustomExpanderTemplate}">
                <Expander.Header>
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="20"
                               Foreground="{DynamicResource IdealForegroundColorBrush}"
                               Text="Recover Alabaster's Password">
                        <TextBlock.Effect>
                            <DropShadowEffect
                                    ShadowDepth="4"
                                    Direction="0"
                                    Color="Black"
                                    Opacity="0.75"
                                    BlurRadius="5"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </Expander.Header>
                <StackPanel>
                    <TextBlock Margin="10" HorizontalAlignment="Center">
                        <Run FontSize="30" FontWeight="Regular" FontFamily="Sans"  FontStyle="Italic" Text="Difficulty:" />
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                        <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                        <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                            <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                        </Path>
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                                    <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                    </TextBlock>
                    <TextBlock Text="Two"/>
                    <TextBlock Text="Three"/>
                    <TextBlock Text="One"/>
                    <TextBlock Text="Two"/>
                    <TextBlock Text="Three"/>
                </StackPanel>
            </Expander>
        </StackPanel>
    </ScrollViewer>
</UserControl>