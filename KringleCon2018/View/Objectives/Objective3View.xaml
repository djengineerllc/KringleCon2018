<UserControl x:Class="KringleCon2018.Objectives.Objective3View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d"
             d:DesignHeight="3600" d:DesignWidth="800">
    <ScrollViewer Name="Scroller" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalAlignment="Stretch">
        <StackPanel>
            <TextBlock Margin="10" HorizontalAlignment="Center">
                <Run FontSize="30" FontWeight="Regular" FontFamily="Sans"  FontStyle="Italic" Text="Difficulty:" />
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="Red" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="{DynamicResource IdealForegroundDisabledBrush}" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="{DynamicResource IdealForegroundDisabledBrush}" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="{DynamicResource IdealForegroundDisabledBrush}" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
                <Canvas SnapsToDevicePixels="True" UseLayoutRounding="True" Height="30" Width="30">
                <Path Width="550" Height="740" Fill="{DynamicResource IdealForegroundDisabledBrush}" StrokeLineJoin="Round">
                    <Path.Data>M104 195q81 -4 159 12.5t135 54.5l21 -33h-67l70 -100q-41 -13 -85.5 -17.5t-89.5 -1.5t-89.5 13t-84.5 28zM114 383l8 16q50 8 100.5 28.5t96.5 50.5l47 -95h-45l40 -63q-57 -9 -115 -3.5t-113 25.5l25 41h-44zM60 229l61 95q60 -19 125 -24.5t126 4.5l18 -29q-62 -37 -132.5 -53t-141.5 -11l12 18h-68zM17 71l40 57q41 -17 89 -26.5t97 -11t97.5 4.5t91.5 20l31 -44h-172v-71h-102v71h-172zM311 496q-42 -30 -87.5 -51t-93.5 -29l74 152q23 -23 46.5 -36t47.5 -12zM178 706l39 9l19 35l23 -38l42 -6l-29 -31l7 -42l-42 21l-42 -19l19 44zM293 533q-25 4 -45 17t-37 33l29 58z</Path.Data>
                </Path>
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.05" ScaleY="0.05" CenterX="0" CenterY="0" />
                            <RotateTransform CenterX="15" CenterY="20" Angle="180" />
                        </TransformGroup>
                    </Canvas.RenderTransform>
                </Canvas>
            </TextBlock>
            <TextBlock FontFamily="Sans"
                       FontSize="16"
                       Margin="10"
                       TextAlignment="Justify"
                       HorizontalAlignment="Left"
                       TextWrapping="Wrap">
                <Run Text="When you break into the speaker unpreparedness room, what does Morcel Nougat say?" />
                <Run FontStyle="Italic" Text="For hints on achieving this objective, please visit Tangle Coalbox and help him with" />
                <Run FontWeight="Bold" FontStyle="Italic" Text="Lethal ForensicELFication" />
                <Run FontStyle="Italic" Text="Cranberry Pi terminal challenge." />
            </TextBlock>
            <Border Margin="10"
                    BorderBrush="{DynamicResource AccentColorBrush}"
                    BorderThickness="2">
                <Grid ShowGridLines="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="2" Grid.Row="0" Grid.Column="0" FontFamily="Sans" FontWeight="Bold" FontSize="16" Text="Elf" />
                    <TextBlock Margin="2" Grid.Row="0" Grid.Column="1" FontFamily="Sans" FontWeight="Bold" FontSize="16" Text="CranberyPi Game" />
                    <TextBlock Margin="2" Grid.Row="1" Grid.Column="0" FontFamily="Sans" FontSize="16" TextWrapping="Wrap" Text="Tangle Coalbox" />
                    <TextBlock Margin="2" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" FontFamily="Sans" FontSize="16">
                        <Hyperlink Command="{Binding Path=NavigateCommand}" CommandParameter="https://docker.kringlecon.com/?challenge=viminfo">
                            Lethal ForensicELFication
                        </Hyperlink>
                    </TextBlock>                    
                </Grid>
            </Border>
            <Border Margin="10"
                    BorderBrush="{DynamicResource AccentColorBrush}"
                    BorderThickness="2">
                <StackPanel>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               TextWrapping="WrapWithOverflow">
                        <Run Text="The Tangle Coalbox terminal loads directly to the shell.  Run the command " />
                        <Label Style="{StaticResource kbd}">ls -lah</Label>
                        <Run>to view what is in the current directory.  You can see a ".secrets" directory, the "runtoanswer" executable, and a ".viminfo" file along with some profile files.</Run><LineBreak /><LineBreak/>
                        1) <Run>View what is in the file poem.txt under the ~/.secrets/her/ directory by running the command</Run>
                        <Label Style="{StaticResource kbd}">cat ~/.secrets/her/poem.txt</Label><LineBreak />
                        <ContentControl Style="{StaticResource panel-default}">
                            <StackPanel>
                                <ContentControl Style="{StaticResource panel-heading-default}" Content="poem.txt"/>
                                <ContentControl Style="{StaticResource panel-body}">
                                    <ContentControl.Content>
                                        <TextBox
                                            Height="200"
                                            Width="350"
                                            Background="Black"
                                            Foreground="White"
                                            TextWrapping="NoWrap"
                                            AcceptsReturn="True"
                                            HorizontalScrollBarVisibility="Auto"
                                            VerticalScrollBarVisibility="Auto"
                                            Text="{Binding Poem}" />
                                    </ContentControl.Content>
                                </ContentControl>
                            </StackPanel>
                        </ContentControl>
                        <LineBreak/>
                        2) <Run>View the history of the .viminfo file to undo the last edits made to the poem.txt file.  To view the edits, run the command: </Run>
                        <Label Style="{StaticResource kbd}">cat ~/.viminfo</Label>. These are the commands that we can undo from the file:
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextWrapping="WrapWithOverflow">
                    <ContentControl Style="{StaticResource panel-default}">
                        <StackPanel>
                            <ContentControl Style="{StaticResource panel-heading-default}" Content=".viminfo"/>
                            <ContentControl Style="{StaticResource panel-body}">
                                <ContentControl.Content>
                                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Height="200" Width="350">
                                        <TextBlock
                                        Background="Black"
                                        Foreground="White"
                                        TextWrapping="NoWrap">
:wq<LineBreak />
|2,0,1536607231,,"wq"<LineBreak />
:%s/Elinore/NEVERMORE/g<LineBreak />
|2,0,1536607217,,"%s/Elinore/NEVERMORE/g"<LineBreak />
:r .secrets/her/poem.txt<LineBreak />
|2,0,1536607201,,"r .secrets/her/poem.txt"<LineBreak />
:q<LineBreak />
|2,0,1536606844,,"q"<LineBreak />
:w<LineBreak />
|2,0,1536606841,,"w"<LineBreak />
:s/God/fates/gc<LineBreak />
|2,0,1536606833,,"s/God/fates/gc"<LineBreak />
:%s/studied/looking/g<LineBreak />
|2,0,1536602549,,"%s/studied/looking/g"<LineBreak />
:%s/sound/tenor/g<LineBreak />
|2,0,1536600579,,"%s/sound/tenor/g"<LineBreak />
:r .secrets/her/poem.txt<LineBreak />
|2,0,1536600314,,"r .secrets/her/poem.txt"<LineBreak />
                                        </TextBlock>
                                    </ScrollViewer>
                                </ContentControl.Content>
                            </ContentControl>
                        </StackPanel>
                    </ContentControl>
                        </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               HorizontalAlignment="Left"
                               TextWrapping="WrapWithOverflow">
                        Looking through the history of shell commands, you can see the following commands ran:
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               TextWrapping="WrapWithOverflow">
                        <ContentControl Style="{StaticResource panel-default}">
                            <StackPanel>
                                <ContentControl Style="{StaticResource panel-heading-default}" Content="history"/>
                                <ContentControl Style="{StaticResource panel-body}">
                                    <ContentControl.Content>
                                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Height="200" Width="350">
                                            <TextBlock
                                                Background="Black"
                                                Foreground="White"
                                                TextWrapping="NoWrap">
        1  set -o history<LineBreak />
        2  whoami<LineBreak />
        3  echo "No, really...  /-:"<LineBreak />
        4  mkdir -p .secrets/her/<LineBreak />
        5  firefox https://www.google.com/search?q=love+poetry<LineBreak />
        6  vim<LineBreak />
        7  ls -lAR<LineBreak />
        8  exit<LineBreak />
        9  set -o history<LineBreak />
       10  df -h<LineBreak />
       11  who<LineBreak />
       12  firefox https://www.google.com/search?q=replacing+strings+in+vim<LineBreak />
       13  time vim<LineBreak />
       14  ls -lAR<LineBreak />
       15  exit<LineBreak />
       16  set -o history<LineBreak />
       17  vim<LineBreak />
       18  exit<LineBreak />
       19  ls -lA<LineBreak />
       20  cat .bash_history<LineBreak />
       21  echo "" >> .bash_history<LineBreak />
       22  firefox https://www.google.com/search?q=turn+off+bash+history<LineBreak />
       23  set +o history<LineBreak />
       24  set +o history<LineBreak />
       25  firefox https://www.google.com/search?q=turn+off+bash+history<LineBreak />
                                            </TextBlock>
                                        </ScrollViewer>
                                    </ContentControl.Content>
                                </ContentControl>
                            </StackPanel>
                        </ContentControl>
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               HorizontalAlignment="Left"
                               TextWrapping="WrapWithOverflow">
                        The history shows the directory .secrets/her/ being created, vim being used, google searches for love poetry, google searches for turning off bash history, and google searches for replacing strings in vim.  Just as we suspected from the .viminfo file.<LineBreak /><LineBreak />
                        3) Setup the commands in reverse to reveal what the document poem.txt used to say.  Open the file with vim text editor (<Label Style="{StaticResource kbd}">vim ~/.secrets/her/poem.txt</Label>), and run the commands below:<LineBreak/><LineBreak/>
                        <Label Style="{StaticResource kbd}">:%s/tenor/sound/g</Label><LineBreak/>
                        <Label Style="{StaticResource kbd}">:%s/looking/studied/g</Label><LineBreak/>
                        <Label Style="{StaticResource kbd}">:s/fates/God/gc</Label><LineBreak/>
                        <Label Style="{StaticResource kbd}">:%s/NEVERMORE/Elinore/g</Label>
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               HorizontalAlignment="Left"
                               Width="400"
                               TextWrapping="WrapWithOverflow">
                        4) <Run>After running the commands, you will have the poem.txt in it's original form and can see the answer:</Run>
                    </TextBlock>

                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               HorizontalAlignment="Left"
                               TextWrapping="WrapWithOverflow">
                    <ContentControl Style="{StaticResource panel-default}">
                        <StackPanel>
                            <ContentControl Style="{StaticResource panel-heading-default}" Content="poem_original.txt"/>
                            <ContentControl Style="{StaticResource panel-body}">
                                <ContentControl.Content>
                                    <TextBox
                                        Height="200"
                                        Width="350"
                                        Background="Black"
                                        Foreground="White"
                                        TextWrapping="NoWrap"
                                        AcceptsReturn="True"
                                        HorizontalScrollBarVisibility="Auto"
                                        VerticalScrollBarVisibility="Auto"
                                        Text="{Binding PoemOriginal}" />
                                </ContentControl.Content>
                            </ContentControl>
                        </StackPanel>
                    </ContentControl>
                    </TextBlock>
                    <Image Source="{Binding TangleCoalbox}" HorizontalAlignment="Left" Margin="0" Stretch="Fill" />
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               HorizontalAlignment="Left"
                               Width="400"
                               TextWrapping="Wrap">
                        <Run FontWeight="Bold" Text="Answer" />: Elinore
                    </TextBlock>
                </StackPanel>
            </Border>
            <Border Margin="10"
                    BorderBrush="{DynamicResource AccentColorBrush}"
                    BorderThickness="2">
                <StackPanel>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10"
                               TextWrapping="WrapWithOverflow">
                        1) For the Objective challenge, you have to break into the unpreparedness room.  To do so you have to get through a door that takes in 4 symbols with a total of 3 different symbols each.
                        You can get to the challenge here: <Hyperlink Command="{Binding NavigateCommand}" CommandParameter="https://doorpasscode.kringlecastle.com/?challenge=doorpasscode">Door Passcode</Hyperlink>
                        You can make a guess by hitting this API link in order to program a brute force solving method: <Hyperlink Command="{Binding NavigateCommand}" CommandParameter="https://doorpasscode.kringlecastle.com/checkpass.php?i=0123">https://doorpasscode.kringlecastle.com/checkpass.php?i=0123</Hyperlink>
                        <LineBreak/>[Guess: Triangle (0), Square (1), Circle (2), Star (3)]
                        <LineBreak/><LineBreak/>
                        Here are our shapes and mapping values that will be sent to the API link:<LineBreak />
                        0 - <iconPacks:PackIconFontAwesome Kind="PlaySolid" Rotation="270" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        1 - <iconPacks:PackIconFontAwesome Kind="SquareFullSolid" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        2 - <iconPacks:PackIconFontAwesome Kind="CircleSolid" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        3 - <iconPacks:PackIconFontAwesome Kind="StarSolid" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <LineBreak/>
                        <Button Cursor="Hand" Command="{Binding BruteForceCommand}">Run Brute-Force</Button>
                        <LineBreak/><LineBreak/>                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
                                <Label Content="{Binding Shape1}" />
                            </Border>
                            <Border Grid.Column="1" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
                                <Label Content="{Binding Shape2}" />
                            </Border>
                            <Border Grid.Column="2" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
                                <Label Content="{Binding Shape3}" />
                            </Border>
                            <Border Grid.Column="3" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
                                <Label Content="{Binding Shape4}" />
                            </Border>
                        </Grid>
                        <LineBreak/>
                        <Run FontWeight="Bold" Text="{Binding DoorMessage}" />
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               HorizontalAlignment="Left"
                               TextWrapping="WrapWithOverflow">
                        The number sequence can be evaluated and solved using <Hyperlink Command="{Binding NavigateCommand}" CommandParameter="http://www.hakank.org/comb/debruijn.cgi?k=4&amp;n=4&amp;submit=Ok">de Bruijn sequence</Hyperlink>.
                        In this scenario, k=4, n=4 where k = size of the alphabet and n is the length of the input string.
                        <LineBreak/>
                        <Run FontWeight="Bold">Sequence Length</Run>: k^n+(n-1) = 4^4+(4-1) = 259
                    </TextBlock>
                    <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               HorizontalAlignment="Left"
                               TextWrapping="Wrap">
                        <Run FontWeight="Bold" Text="Answer" />:
                        <iconPacks:PackIconFontAwesome Kind="PlaySolid" Rotation="270" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <iconPacks:PackIconFontAwesome Kind="SquareFullSolid" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <iconPacks:PackIconFontAwesome Kind="CircleSolid" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <iconPacks:PackIconFontAwesome Kind="PlaySolid" Rotation="270" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <LineBreak /><LineBreak />
                        With the answer above to the door passcode, you can now go in and talk to Morcel Nougat.  The only thing that Morcel Nougat says is "Welcome unprepared speaker!"
                    </TextBlock>
                </StackPanel>
            </Border>
            <TextBlock FontFamily="Sans"
                               FontSize="16"
                               Margin="10,10,10,10"
                               HorizontalAlignment="Left"
                               Width="400"
                               TextWrapping="Wrap">
                        <Run FontWeight="Bold" Text="Answer" />: Welcome unprepared speaker!
            </TextBlock>
            <TextBlock><LineBreak /></TextBlock>
        </StackPanel>
    </ScrollViewer>
</UserControl>